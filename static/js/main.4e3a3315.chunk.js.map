{"version":3,"sources":["main_component/ContentHeader.js","main_component/GitLink.js","components/Calc/Calc.js","components/Card/moto.js","components/Card/Card.js","components/Graph/Graph.js","components/Snake/ModalInfo.js","components/Profile/Profile.js","components/Reminder/Pages/ArrayPage.js","components/Reminder/Pages/BoolPage.js","components/Reminder/Pages/ObjPage.js","components/Reminder/Pages/ProtoPage.js","components/Reminder/Tabs.js","components/Reminder/Reminder.js","components/Snake/SnakeBar.js","components/Snake/SnakeBody.js","components/Snake/SnakeFood.js","components/Snake/Snake.js","components/TestBtn/TestBtn.js","main_component/Content.js","main_component/Header.js","main_component/InfoBar.js","main_component/LinkBar.js","main_component/ProjectBar.js","MainApp.js","reportWebVitals.js","index.js"],"names":["ContentHeader","props","className","children","GitLink","target","rel","href","text","Calc","state","afterRes","display","memo","math","symbolBtn","operBtn","1","2","3","4","5","6","7","8","addSymbol","e","sbl","dataset","s","setState","operating","val","o","result","res","this","setProp","map","i","data-s","onClick","Object","values","oper","data-o","Component","Moto","src","img","alt","Card","imgs","blue","green","black","useState","motoColor","setMotoColor","axis","React","createRef","moto","logo","kawa","btnsBlock","submit","y","setY","x","setX","setColor","newColor","c","onMouseMove","axisX","current","offsetWidth","offsetLeft","axisY","offsetHeight","offsetTop","style","transform","pageY","pageX","onMouseEnter","transition","onMouseLeave","ref","data-c","grid","Graph","st","setSt","dfs","nextX","nextY","intoGrid","h","length","w","row","j","ModalInfo","active","setActive","stopPropagation","Profile","modal","setModal","toggleModal","blur","ArrayPage","BoolPage","ObjPage","ProtoPage","Tabs","btnStyle","Map","item","push","to","Reminder","path","component","SnakeBar","start","stop","fieldXY","setFieldX","setFieldY","type","onChange","value","SnakeBody","snakeCells","top","left","SnakeFood","food","gameLoop","initState","fieldSize","direction","speed","activeModal","Snake","onKD","window","event","keyCode","gameOver","gameStart","moveSnake","cells","head","shift","selfCollision","snake","pop","forEach","cell","checkLeave","width","height","getRandomFood","maxX","maxY","Math","floor","random","checkEat","extendSnake","newSnake","unshift","setInterval","clearInterval","update","isNaN","document","onkeydown","TestBtn","clickButton","currentTarget","classList","toggle","Content","opacity","setOpacity","exact","prop","Header","InfoBar","LinkBar","ProjectBar","MainApp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4e3a3315.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./main.css\";\r\n\r\nconst ContentHeader = (props) => {\r\n  return (\r\n    <div className='content-header'>\r\n      <h2 className='content-header__title'>{props.children}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContentHeader;\r\n","import React from \"react\";\r\nimport \"./main.css\";\r\n\r\nfunction GitLink(props) {\r\n  return (\r\n    <div className='git-link bar_bg'>\r\n      <p>Код на GitHub: </p>\r\n      <a target='_blank' rel='noreferrer' href={props.children}>\r\n        {props.text}\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GitLink;\r\n","// калькулятор\r\n// введенные данные записываются в три переменные в виде строк\r\n// 1:первое число, 2:второе число, 3:математический знак\r\n// результат расчитывается в зависимости от мат. знака\r\n\r\n// TODO:\r\n// 1) обработка нажатий клавиатуры\r\n// 2) валидация ввода\r\n// 3) доработка UX\r\n\r\nimport { Component } from \"react\";\r\nimport ContentHeader from \"../../main_component/ContentHeader\";\r\nimport GitLink from \"../../main_component/GitLink\";\r\nimport \"./Calc.css\";\r\n\r\nclass Calc extends Component {\r\n  // стэйт для инициализации компонента\r\n  state = {\r\n    afterRes: false,\r\n    display: \"\",\r\n    memo: \"\",\r\n    math: \"\",\r\n    symbolBtn: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"+/-\", \"0\", \".\"],\r\n    operBtn: {\r\n      1: \"CE\",\r\n      2: \"C/AC\",\r\n      3: \"x\",\r\n      4: \"/\",\r\n      5: \"-\",\r\n      6: \"%\",\r\n      7: \"+\",\r\n      8: \"=\",\r\n    },\r\n  };\r\n\r\n  // установка\\снятие прозрачного фона при монтировании\\размонтировании компонента\r\n  componentDidMount() {\r\n    this.props.setProp(true);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.setProp(false);\r\n  }\r\n\r\n  // обработка нажатий на символьные кнопки\r\n  addSymbol = (e) => {\r\n    let sbl = e.target.dataset.s;\r\n    if (sbl === \"+/-\" && this.state.display[0] !== \"-\") {\r\n      this.setState({ display: `-${this.state.display}` });\r\n    } else if (sbl !== \"+/-\") {\r\n      this.setState({ display: this.state.display + sbl });\r\n    }\r\n  };\r\n\r\n  // обработка нажатий на операционные кнопки\r\n  operating = (e) => {\r\n    let val = e.target.dataset.o;\r\n    switch (val) {\r\n      case \"x\":\r\n      case \"/\":\r\n      case \"-\":\r\n      case \"+\":\r\n      case \"%\":\r\n        this.setState({ memo: this.state.display, math: val });\r\n        this.setState({ display: \"\" });\r\n        break;\r\n      case \"=\":\r\n        this.result();\r\n        break;\r\n\r\n      // обнуление введенных данных\r\n      case \"C/AC\":\r\n        this.setState({ display: \"\", memo: \"\", math: \"\" });\r\n        break;\r\n      case \"CE\":\r\n        this.setState({ display: \"\" });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  // расчет результата\r\n  result = () => {\r\n    let res;\r\n\r\n    if (this.state.memo && this.state.display) {\r\n      let display = this.state.display;\r\n      let memo = this.state.memo;\r\n      let math = this.state.math;\r\n\r\n      switch (math) {\r\n        case \"%\":\r\n          res = +memo % +display;\r\n          break;\r\n        case \"/\":\r\n          res = +memo / +display;\r\n          break;\r\n        case \"x\":\r\n          res = +memo * +display;\r\n          break;\r\n        case \"-\":\r\n          res = +memo - +display;\r\n          break;\r\n        case \"+\":\r\n          res = +memo + +display;\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n      this.setState({ display: res, memo: \"\", math: \"\" });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='wrap-calc'>\r\n        <ContentHeader>{\"Калькулятор\"}</ContentHeader>\r\n        <div className='calc'>\r\n          <div className='calc__lable'>\r\n            <div className='bar_bg'>Calc 2021</div>\r\n          </div>\r\n          <div className='calc__display bar_bg'>\r\n            <div className='display_1'>\r\n              {this.state.memo} {this.state.math}\r\n            </div>\r\n            <div className='display_2'>{this.state.display}</div>\r\n          </div>\r\n          <div className='calc__symbol-bar bar_bg'>\r\n            {this.state.symbolBtn.map((sbl, i) => (\r\n              <div\r\n                className='calc__btn bar_bg'\r\n                data-s={sbl}\r\n                onClick={this.addSymbol}\r\n                key={i}>\r\n                <span>{sbl}</span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className='calc__operating-bar bar_bg'>\r\n            {Object.values(this.state.operBtn).map((oper, i) => (\r\n              <div\r\n                className='calc__btn bar_bg'\r\n                onClick={this.operating}\r\n                data-o={oper}\r\n                key={i}>\r\n                <span>{oper}</span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <GitLink text={\"Калькулятор\"}>\r\n          {\r\n            \"https://github.com/xamesLab/portfolio/tree/main/src/components/Calc\"\r\n          }\r\n        </GitLink>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Calc;\r\n","import React from \"react\";\r\n\r\nfunction Moto(props) {\r\n  return <img src={props.img} alt='moto'></img>;\r\n}\r\n\r\nexport default Moto;\r\n","// карточка товара с 3D эффектом\r\n// при наведении курсора на прозрачную подложку\r\n// элементы карточки меняют свои стили\r\n// изменяется z и наклон элементов относительно центральных осей x,y\r\n\r\nimport React, { useState } from \"react\";\r\nimport GitLink from \"../../main_component/GitLink\";\r\nimport \"./Card.css\";\r\nimport Moto from \"./moto\";\r\n\r\nfunction Card() {\r\n  // список изображений подгружаемых в карточку\r\n  const imgs = {\r\n    blue: \"/images/main/blue.png\",\r\n    green: \"/images/main/p.png\",\r\n    black: \"/images/main/bl.png\",\r\n  };\r\n\r\n  let [motoColor, setMotoColor] = useState(imgs.green);\r\n\r\n  // ссылка на элемент для рассчета центральных осей\r\n  const axis = React.createRef();\r\n\r\n  // ссылки на элементы для стилизации\r\n  const moto = React.createRef();\r\n  const logo = React.createRef();\r\n  const kawa = React.createRef();\r\n  const btnsBlock = React.createRef();\r\n  const submit = React.createRef();\r\n\r\n  // установка угла наклона по осям\r\n  const [y, setY] = useState(0);\r\n  const [x, setX] = useState(0);\r\n\r\n  // обработка перемещения мыши\r\n  const oMM = (e) => {\r\n    // расчет осей\r\n    let axisX = axis.current.offsetWidth + axis.current.offsetLeft;\r\n    let axisY = axis.current.offsetHeight / 2 + axis.current.offsetTop;\r\n    // изменение наклона\r\n    axis.current.style.transform = `rotateX(${y}deg) rotateY(${x}deg)`;\r\n    setY((axisY - e.pageY) / 18);\r\n    setX((e.pageX - axisX) / 18);\r\n  };\r\n\r\n  // вход мыши на подложку\r\n  const oME = (e) => {\r\n    // сброс transition для быстрой реакции на перемещение мыши\r\n    axis.current.style.transition = `none`;\r\n\r\n    // изменение z\r\n    moto.current.style.transform = `translateZ(110px) rotateZ(-20deg)`;\r\n    logo.current.style.transform = `translateZ(80px)`;\r\n    btnsBlock.current.style.transform = `translateZ(50px)`;\r\n    submit.current.style.transform = `translateZ(80px)`;\r\n    kawa.current.style.transform = `translateZ(40px)`;\r\n  };\r\n\r\n  // уход мыши с подложки\r\n  const oML = (e) => {\r\n    // установка плавного возвращения в исходное состояние\r\n    axis.current.style.transition = `all 0.5s ease`;\r\n    axis.current.style.transform = `rotateX(0deg) rotateY(0deg)`;\r\n\r\n    // сброс z\r\n    moto.current.style.transform = `translateZ(0px)`;\r\n    logo.current.style.transform = `translateZ(0px)`;\r\n    btnsBlock.current.style.transform = `translateZ(0px)`;\r\n    submit.current.style.transform = `translateZ(0px)`;\r\n    kawa.current.style.transform = `translateZ(0px)`;\r\n  };\r\n\r\n  // установка изображения по нажатию на кнопки\r\n  const setColor = (e) => {\r\n    let newColor = e.target.dataset.c;\r\n    setMotoColor(imgs[newColor]);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className='wrap-card'\r\n      onMouseMove={oMM}\r\n      onMouseEnter={oME}\r\n      onMouseLeave={oML}>\r\n      <div\r\n        className='card__blur'\r\n        onMouseEnter={(e) => {\r\n          e.target.style = \"display: none;\";\r\n        }}>\r\n        <p>3D эффект при наведении</p>\r\n      </div>\r\n      <div className='card' ref={axis}>\r\n        <div className='card__img'>\r\n          <div className='card__circle'></div>\r\n          <div ref={moto}>\r\n            <Moto img={motoColor} />\r\n          </div>\r\n        </div>\r\n        <div className='card__info'>\r\n          <div className='card__logo'>\r\n            <img src={\"images/main/ninja.png\"} alt='logo' ref={logo}></img>\r\n          </div>\r\n          <h3 ref={kawa}>kawasaki 300 ninja</h3>\r\n          <div className='card__button' ref={btnsBlock}>\r\n            <button data-c='green' onClick={setColor}>\r\n              green\r\n            </button>\r\n            <button data-c='black' onClick={setColor}>\r\n              black\r\n            </button>\r\n            <button data-c='blue' onClick={setColor}>\r\n              blue\r\n            </button>\r\n          </div>\r\n          <div className='card__sub' ref={submit}>\r\n            <button>Заявка</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <GitLink text={\"Карточка товара\"}>\r\n        {\"https://github.com/xamesLab/portfolio/tree/main/src/components/Card\"}\r\n      </GitLink>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","// обход графа в глубину DFS\r\n\r\n// в поле отрисовки рисуется несколько графов-островков\r\n// графы строится по двумерному массиву\r\n// где каждый элемент массива равный 1 - это вершина графа\r\n// ребра графа соединяют элементы только по горизонтали и вертикали\r\n\r\n// обход идет рекурсивно, обнуляя каждую вершину\r\n// при нажатии на вершину графа идет обход всего графа\r\n// с обнуление всех вершин данного графа\r\n\r\n// при нажатии на поле вне существующих графов\r\n// появляется новый элемент, который образует новый граф\r\n// или добавляется к существующим, в зависимости от расположения\r\n\r\n// TODO:\r\n// 1) построение островков случайным образом\r\n// 2) отрисовка ребер графов\r\n\r\nimport React, { useState } from \"react\";\r\nimport ContentHeader from \"../../main_component/ContentHeader\";\r\nimport GitLink from \"../../main_component/GitLink\";\r\nimport \"./Graph.css\";\r\n\r\n// массив для отрисовки графа\r\nconst grid = [\r\n  [0, 1, 1, 0, 1, 1, 1, 0, 0, 1],\r\n  [0, 1, 1, 1, 0, 0, 1, 0, 1, 1],\r\n  [1, 1, 0, 0, 1, 1, 1, 1, 0, 0],\r\n  [0, 0, 0, 1, 1, 1, 0, 0, 0, 1],\r\n  [1, 0, 0, 1, 0, 0, 1, 0, 1, 1],\r\n  [0, 0, 0, 0, 0, 1, 1, 0, 1, 0],\r\n  [1, 0, 0, 0, 1, 0, 1, 0, 0, 1],\r\n  [0, 1, 0, 1, 0, 0, 0, 0, 1, 1],\r\n  [0, 1, 0, 1, 0, 1, 1, 1, 0, 1],\r\n  [1, 1, 0, 1, 0, 1, 0, 1, 0, 0],\r\n];\r\n\r\nfunction Graph() {\r\n  // обновление стэйта для перерисовки графа\r\n  const [st, setSt] = useState(0);\r\n\r\n  //depth-first search\r\n  const dfs = (x, y) => {\r\n    // обнуление элемента\r\n    grid[x][y] = 0;\r\n\r\n    // проверка соседних элементов графа сверху/справа/снизу/слева\r\n    for (let [dx, dy] of [\r\n      [0, 1],\r\n      [1, 0],\r\n      [0, -1],\r\n      [-1, 0],\r\n    ]) {\r\n      let nextX = x + dx;\r\n      let nextY = y + dy;\r\n\r\n      // внутри поля и равен 1?\r\n      if (intoGrid(nextX, nextY) && grid[nextX][nextY] === 1) {\r\n        // рекурсивный вызов\r\n        dfs(nextX, nextY);\r\n      }\r\n    }\r\n  };\r\n\r\n  // проверка на нахождение внутри поля\r\n  const intoGrid = (x, y) => {\r\n    let h = grid.length;\r\n    let w = grid[0].length;\r\n\r\n    return 0 <= x && x < h && 0 <= y && y < w;\r\n  };\r\n\r\n  return (\r\n    <div className='wrap-graph'>\r\n      <ContentHeader>{\"Обход графа\"}</ContentHeader>\r\n      {grid.map((row, i) => (\r\n        <div key={i}>\r\n          {row.map((val, j) => (\r\n            <div\r\n              key={i * row.length + j}\r\n              className={`cell ${val ? \"cell-node\" : \"cell-zero\"}`}\r\n              onClick={() => {\r\n                if (val === 1) {\r\n                  dfs(i, j);\r\n                } else {\r\n                  grid[i][j] = 1;\r\n                }\r\n                setSt(st + 1);\r\n              }}\r\n            />\r\n          ))}\r\n        </div>\r\n      ))}\r\n      <GitLink text={\"Обход графа\"}>\r\n        {\"https://github.com/xamesLab/portfolio/tree/main/src/components/Graph\"}\r\n      </GitLink>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Graph;\r\n","import React from \"react\";\r\n\r\nconst ModalInfo = (props) => {\r\n  return (\r\n    <div\r\n      className={props.active ? \"modal-info active\" : \"modal-info\"}\r\n      onClick={props.setActive}>\r\n      <div\r\n        className='modal-info__modal'\r\n        onClick={(e) => {\r\n          e.stopPropagation();\r\n        }}>\r\n        <div className='modal-info__head'>\r\n          <h2>info</h2>\r\n        </div>\r\n        <div className='modal-info__content'>\r\n          {props.children}\r\n          <div className='modal-info__btn'>\r\n            <button onClick={props.setActive}>ok</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalInfo;\r\n","import React, { useState } from \"react\";\r\nimport ModalInfo from \"../Snake/ModalInfo\";\r\nimport \"./Profile.css\";\r\n//import { NavLink } from \"react-router-dom\";\r\n\r\nfunction Profile() {\r\n  let [modal, setModal] = useState(false);\r\n\r\n  const toggleModal = (e) => {\r\n    e.target.blur();\r\n    if (!modal) {\r\n      setModal(true);\r\n    } else {\r\n      setModal(false);\r\n    }\r\n  };\r\n  return (\r\n    <div className='wrap-profile'>\r\n      <div className='profile__header'>\r\n        <img\r\n          className='profile__foto bar_bg'\r\n          src={\"images/main/photo.png\"}\r\n          alt='альтернативный текст'></img>\r\n        <div>\r\n          <p>(портфолио)</p>\r\n          <h2>Евгений Ананьин</h2>\r\n          <p>16.06.1987г.</p>\r\n          <p>Москва</p>\r\n        </div>\r\n      </div>\r\n      <div className='profile__main'>\r\n        <div className='profile__contacts'>\r\n          <div className='contacts-block bar_bg'>\r\n            <ul className='profile__links'>\r\n              <li>\r\n                <img src={\"/images/icons/telegram.svg\"} alt='telegram'></img>\r\n                <a\r\n                  target='_blank'\r\n                  rel='noreferrer'\r\n                  href='https://tlgg.ru/@xamchief'>\r\n                  @xamchief\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <img src={\"/images/icons/vk.svg\"} alt='vk'></img>\r\n                <a\r\n                  target='_blank'\r\n                  rel='noreferrer'\r\n                  href='https://vk.com/id471610781'>\r\n                  id471610781\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <img src={\"/images/icons/linkedin.svg\"} alt='linkedin'></img>\r\n                <a\r\n                  target='_blank'\r\n                  rel='noreferrer'\r\n                  href='https://linkedin.com/in/evgeniian'>\r\n                  evgeniian\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <img src={\"/images/icons/github.svg\"} alt='github'></img>\r\n                <a\r\n                  target='_blank'\r\n                  rel='noreferrer'\r\n                  href='https://github.com/xamesLab'>\r\n                  xamesLab\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className='profile__content'>\r\n          <div className='profile__about'>\r\n            <h3>О себе:</h3>\r\n          </div>\r\n          <div className='profile__summary'>\r\n            <p>Начинающий фронтэнд разработчик.</p>\r\n          </div>\r\n          <div className='profile__skills'>\r\n            <p>\r\n              Опыт разработки: боты для мессенджеров, торговые роботы и\r\n              аналитика для криптобирж, отбор данных по API и Websocket, парсинг\r\n              данных из вэб, нейросети, разработка на React и чистом JS.\r\n            </p>\r\n            <p>\r\n              Используемые навыки: JS/ES6, React, Redux, БЭМ, Python, PyTorch,\r\n              Django, Git.\r\n            </p>\r\n          </div>\r\n          <div className='profile__info'>\r\n            <button className='profile__btn bar_bg' onClick={toggleModal}>\r\n              о сайте\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ModalInfo className='modal' active={modal} setActive={toggleModal}>\r\n        <p className='modal__item'>\r\n          Сайт разработан на библиотеке React. Весь код написан лично автором.\r\n        </p>\r\n        <p className='modal__item'>\r\n          Сайт создан в качестве портфолио и дорабатывается. Если вам попался\r\n          баг, значит я до него еще не добрался.\r\n        </p>\r\n        <p className='modal__item'>\r\n          В процессе проработки находится \"адаптивнось\" и \"кроссбраузерность\".{\" \"}\r\n          <i>Существуют проблемы с отображением в браузере Safari.</i>\r\n        </p>\r\n        <p className='modal__item'>\r\n          Дизайн сайта не претендует на овации, а просто \"чтобы был\", отложен в\r\n          \"долгий ящик\"\r\n        </p>\r\n      </ModalInfo>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\n\r\nfunction ArrayPage() {\r\n  return (\r\n    <div className=''>\r\n      <h3>Массивы</h3>\r\n      <h4>В разработке</h4>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ArrayPage;\r\n","import React from \"react\";\r\n\r\nfunction BoolPage() {\r\n  return (\r\n    <div className=''>\r\n      <h3>Bool</h3>\r\n      <h4>В разработке</h4>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BoolPage;\r\n","import React from \"react\";\r\n\r\nfunction ObjPage() {\r\n  return (\r\n    <div className=''>\r\n      <h3>Объекты</h3>\r\n      <h4>В разработке</h4>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ObjPage;\r\n","import React from \"react\";\r\n\r\nfunction ProtoPage() {\r\n  return (\r\n    <div className=''>\r\n      <h3>Прототипы</h3>\r\n      <h4>В разработке</h4>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProtoPage;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./Reminder.css\";\r\n\r\nfunction Tabs() {\r\n  let btnStyle = new Map([\r\n    [\"array\", [\"off\", \"массив\"]],\r\n    [\"bool\", [\"off\", \"bool\"]],\r\n    [\"obj\", [\"off\", \"объекты\"]],\r\n    [\"proto\", [\"off\", \"прототипы\"]],\r\n  ]);\r\n\r\n  let item = [];\r\n\r\n  for (let i of btnStyle) {\r\n    item.push(\r\n      <NavLink\r\n        className={`tabs__btn neu__btn ${i[1][0]}`}\r\n        key={i[0]}\r\n        to={`/memo/${i[0]}`}>\r\n        {i[1][1]}\r\n      </NavLink>\r\n    );\r\n  }\r\n\r\n  return <div className='tabs container_neu'>{item}</div>;\r\n}\r\n\r\nexport default Tabs;\r\n","import React from \"react\";\r\nimport { Route } from \"react-router\";\r\nimport ContentHeader from \"../../main_component/ContentHeader\";\r\nimport GitLink from \"../../main_component/GitLink\";\r\nimport ArrayPage from \"./Pages/ArrayPage\";\r\nimport BoolPage from \"./Pages/BoolPage\";\r\nimport ObjPage from \"./Pages/ObjPage\";\r\nimport ProtoPage from \"./Pages/ProtoPage\";\r\nimport \"./Reminder.css\";\r\nimport Tabs from \"./Tabs\";\r\n\r\nfunction Reminder() {\r\n  return (\r\n    <div className='wrap-memo'>\r\n      <ContentHeader>{\"Памятка JS\"}</ContentHeader>\r\n\r\n      <Tabs />\r\n      <div className='reminder__page container_neu'>\r\n        <Route path='/memo/array' component={ArrayPage} />\r\n        <Route path='/memo/bool' component={BoolPage} />\r\n        <Route path='/memo/obj' component={ObjPage} />\r\n        <Route path='/memo/proto' component={ProtoPage} />\r\n      </div>\r\n\r\n      <GitLink text={\"Памятка\"}>\r\n        {\r\n          \"https://github.com/xamesLab/portfolio/tree/main/src/components/Reminder\"\r\n        }\r\n      </GitLink>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Reminder;\r\n","// отрисовка блока меню\r\nimport React from \"react\";\r\n\r\nconst SnakeBar = ({ start, stop, modal, fieldXY, setFieldX, setFieldY }) => {\r\n  return (\r\n    <div className='snake__bar'>\r\n      <div>\r\n        <span>размер поля (5 - 30): </span>\r\n        <input type='text' onChange={setFieldX} value={fieldXY[0]}></input>\r\n        <input type='text' onChange={setFieldY} value={fieldXY[1]}></input>\r\n      </div>\r\n      <div>\r\n        <button onClick={start}>start</button>\r\n        <button onClick={stop}>stop</button>\r\n        <button onClick={modal}>info</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SnakeBar;\r\n","import React from \"react\";\r\n\r\nconst SnakeBody = (props) => {\r\n  return (\r\n    <div>\r\n      {props.snakeCells.map((c, i) => {\r\n        const style = {\r\n          top: `${c[0]}rem`,\r\n          left: `${c[1]}rem`,\r\n        };\r\n        return <div className='snake__cell' key={i} style={style}></div>;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SnakeBody;\r\n","import React from \"react\";\r\n\r\nconst SnakeFood = ({ food }) => {\r\n  const style = {\r\n    top: `${food[0]}rem`,\r\n    left: `${food[1]}rem`,\r\n  };\r\n  return <div className='field__food' style={style}></div>;\r\n};\r\n\r\nexport default SnakeFood;\r\n","// классическая змейка\r\n// на каждой итерации игрового цикла у тела змейки\r\n// удаляется последний элемент и дорисовывается первый\r\n// в зависимости от установленного направления\r\n// при совпадении координат \"головы\" и \"еды\"\r\n//в \"хвост\" добавляется один пустой элемент\r\n\r\nimport React, { Component } from \"react\";\r\nimport ContentHeader from \"../../main_component/ContentHeader\";\r\nimport GitLink from \"../../main_component/GitLink\";\r\nimport ModalInfo from \"./ModalInfo\";\r\nimport \"./Snake.css\";\r\nimport SnakeBar from \"./SnakeBar\";\r\nimport SnakeBody from \"./SnakeBody\";\r\nimport SnakeFood from \"./SnakeFood\";\r\n\r\n// состояние игрового цикла\r\nlet gameLoop = null;\r\n\r\n// инициирующее состояние\r\nconst initState = {\r\n  fieldSize: [20, 20],\r\n  fieldXY: [20, 20],\r\n  direction: \"RIGHT\",\r\n  speed: 200,\r\n  food: [4, 4],\r\n  snakeCells: [\r\n    [1, 1],\r\n    [1, 2],\r\n  ],\r\n  activeModal: false, // состояние модального окна\r\n};\r\n\r\nclass Snake extends Component {\r\n  state = initState;\r\n\r\n  // отслеживание нажатий на кнопки клавиатуры\r\n  componentDidMount() {\r\n    document.onkeydown = this.onKD;\r\n  }\r\n\r\n  // отслеживание положения внутри поля/столкновений с собой/сбора еды\r\n  componentDidUpdate() {\r\n    this.checkLeave();\r\n    this.selfCollision();\r\n    this.checkEat();\r\n  }\r\n\r\n  // обработка нажатий\r\n  onKD = (e) => {\r\n    e = e || window.event;\r\n    if (!this.state.activeModal) {\r\n      switch (e.keyCode) {\r\n        // старт/стоп\r\n        case 32:\r\n          !gameLoop ? this.gameStart() : this.gameOver();\r\n          break;\r\n        // обновление направления\r\n        case 38:\r\n          this.setState({ direction: \"UP\" });\r\n          break;\r\n        case 40:\r\n          this.setState({ direction: \"DOWN\" });\r\n          break;\r\n        case 37:\r\n          this.setState({ direction: \"LEFT\" });\r\n          break;\r\n        case 39:\r\n          this.setState({ direction: \"RIGHT\" });\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  };\r\n\r\n  // движение в цикле\r\n  moveSnake = () => {\r\n    let cells = [...this.state.snakeCells];\r\n    let head = cells[cells.length - 1];\r\n\r\n    switch (this.state.direction) {\r\n      case \"RIGHT\":\r\n        head = [head[0], head[1] + 1];\r\n        break;\r\n\r\n      case \"LEFT\":\r\n        head = [head[0], head[1] - 1];\r\n        break;\r\n\r\n      case \"DOWN\":\r\n        head = [head[0] + 1, head[1]];\r\n        break;\r\n\r\n      case \"UP\":\r\n        head = [head[0] - 1, head[1]];\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    cells.push(head);\r\n    cells.shift();\r\n\r\n    this.setState({\r\n      snakeCells: cells,\r\n    });\r\n  };\r\n\r\n  // обработка столкновений с собой\r\n  selfCollision = () => {\r\n    let head = this.state.snakeCells[this.state.snakeCells.length - 1];\r\n    let snake = [...this.state.snakeCells];\r\n    snake.pop();\r\n    snake.forEach((cell) => {\r\n      if (head[0] === cell[0] && head[1] === cell[1]) {\r\n        this.gameOver();\r\n      }\r\n    });\r\n  };\r\n\r\n  // обработка выхода за пределы поля\r\n  checkLeave = () => {\r\n    let width = this.state.fieldSize[0];\r\n    let height = this.state.fieldSize[1];\r\n    let head = this.state.snakeCells[this.state.snakeCells.length - 1];\r\n    if (\r\n      head[0] < 0 ||\r\n      head[1] < 0 ||\r\n      head[0] > height - 1 ||\r\n      head[1] > width - 1\r\n    ) {\r\n      this.gameOver();\r\n    }\r\n  };\r\n\r\n  // создание \"еды\" в случайном месте\r\n  getRandomFood = () => {\r\n    let min = 0;\r\n    let maxX = this.state.fieldXY[0] - 1;\r\n    let maxY = this.state.fieldXY[1] - 1;\r\n    let y = Math.floor((Math.random() * (maxX - min + 1) + min) / 2) * 2;\r\n    let x = Math.floor((Math.random() * (maxY - min + 1) + min) / 2) * 2;\r\n    return [x, y];\r\n  };\r\n\r\n  // обработка сбора \"еды\"\r\n  checkEat = () => {\r\n    let head = this.state.snakeCells[this.state.snakeCells.length - 1];\r\n    let food = this.state.food;\r\n\r\n    if (head[0] === food[0] && head[1] === food[1]) {\r\n      this.setState({\r\n        food: this.getRandomFood(),\r\n      });\r\n      this.extendSnake();\r\n    }\r\n  };\r\n\r\n  // увеличение \"тела\"\r\n  extendSnake = () => {\r\n    let newSnake = [...this.state.snakeCells];\r\n    newSnake.unshift([]);\r\n    this.setState({\r\n      snakeCells: newSnake,\r\n    });\r\n  };\r\n\r\n  // запуск игрового цикла\r\n  gameStart = () => {\r\n    if (!gameLoop) {\r\n      this.setState({ fieldSize: this.state.fieldXY });\r\n      gameLoop = setInterval(this.moveSnake, this.state.speed);\r\n    }\r\n  };\r\n\r\n  // стоп игрового цикла и возврат к исходному состоянию\r\n  gameOver = () => {\r\n    clearInterval(gameLoop);\r\n    gameLoop = null;\r\n    this.setState(initState);\r\n  };\r\n\r\n  // изменение состояния модального окна\r\n  setModal = (e) => {\r\n    e.target.blur();\r\n    if (!this.state.activeModal) {\r\n      this.setState({ activeModal: true });\r\n    } else {\r\n      this.setState({ activeModal: false });\r\n    }\r\n  };\r\n\r\n  // установка размеров поля по Х\r\n  setFieldX = (e) => {\r\n    let update = !isNaN(e.target.value) ? +e.target.value : 15;\r\n    if (update >= 30) {\r\n      update = 30;\r\n    }\r\n    this.setState({ fieldXY: [update, this.state.fieldXY[1]] });\r\n  };\r\n\r\n  // установка размеров поля по Y\r\n  setFieldY = (e) => {\r\n    let update = !isNaN(e.target.value) ? +e.target.value : 15;\r\n    if (update >= 30) {\r\n      update = 30;\r\n    }\r\n    this.setState({ fieldXY: [this.state.fieldXY[0], update] });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='wrap-snake'>\r\n        <ContentHeader>{\"Змейка\"}</ContentHeader>\r\n        <SnakeBar\r\n          fieldXY={this.state.fieldXY}\r\n          setFieldX={this.setFieldX}\r\n          setFieldY={this.setFieldY}\r\n          start={this.gameStart}\r\n          stop={this.gameOver}\r\n          modal={this.setModal}\r\n        />\r\n        <div\r\n          className='field'\r\n          style={{\r\n            width: `${this.state.fieldSize[0]}rem`,\r\n            height: `${this.state.fieldSize[1]}rem`,\r\n          }}>\r\n          <SnakeBody snakeCells={this.state.snakeCells} />\r\n          <SnakeFood food={this.state.food} />\r\n        </div>\r\n        <ModalInfo active={this.state.activeModal} setActive={this.setModal}>\r\n          <div className='modal-info__item'>\r\n            <p>Старт/Стоп - 'space'</p>\r\n            <img src={\"images/main/button.svg\"} alt={\"space button\"} />\r\n          </div>\r\n          <div className='modal-info__item'>\r\n            <p>Влево/Вправо/Вверх/Вниз</p>\r\n            <img src={\"images/main/keyboard.svg\"} alt={\"arrow button\"} />\r\n          </div>\r\n          <div className='modal-info__item'>\r\n            <p>Перед стартом вы можете указать размер поля (широна\\высота)</p>\r\n            <img src={\"images/main/input.png\"} alt={\"input\"} />\r\n          </div>\r\n        </ModalInfo>\r\n        <GitLink text={\"Змейка\"}>\r\n          {\r\n            \"https://github.com/xamesLab/portfolio/tree/main/src/components/Snake\"\r\n          }\r\n        </GitLink>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Snake;\r\n","import React from \"react\";\r\nimport GitLink from \"../../main_component/GitLink\";\r\nimport \"./TestBtn.css\";\r\n\r\nfunction TestBtn() {\r\n  const clickButton = (e) => {\r\n    e.currentTarget.classList.toggle(\"active\");\r\n    e.currentTarget.classList.toggle(\"off\");\r\n  };\r\n  return (\r\n    <div className='neu-wrap'>\r\n      <div className='container_neu container_neu_around'>\r\n        <button onClick={clickButton} className='neu__btn active fst'>\r\n          <span>first</span>\r\n        </button>\r\n        <button onClick={clickButton} className='neu__btn off scnd'>\r\n          <span>sc</span>\r\n        </button>\r\n      </div>\r\n      <GitLink text={\"Неоморфизм\"}>\r\n        {\r\n          \"https://github.com/xamesLab/portfolio/tree/main/src/components/TestBtn\"\r\n        }\r\n      </GitLink>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TestBtn;\r\n","import React, { useState } from \"react\";\r\nimport { Route } from \"react-router\";\r\nimport Calc from \"../components/Calc/Calc\";\r\nimport Card from \"../components/Card/Card\";\r\nimport Graph from \"../components/Graph/Graph\";\r\nimport Profile from \"../components/Profile/Profile\";\r\nimport Reminder from \"../components/Reminder/Reminder\";\r\nimport Snake from \"../components/Snake/Snake\";\r\nimport TestBtn from \"../components/TestBtn/TestBtn\";\r\nimport \"./main.css\";\r\nimport \"./neu.css\";\r\n\r\nfunction Content() {\r\n  // установка прозрачности\r\n  let [opacity, setOpacity] = useState(false);\r\n\r\n  return (\r\n    <div className={`${opacity ? \"container_op\" : \"container\"} content`}>\r\n      <Route exact path='/' component={Profile} />\r\n      <Route path='/card3D' component={Card} />\r\n      <Route path='/graph' component={Graph} />\r\n      <Route path='/memo' component={Reminder} />\r\n      <Route path='/snake' component={Snake} />\r\n      <Route path='/btn' component={TestBtn} />\r\n      <Route\r\n        path='/calc'\r\n        component={() => <Calc setProp={setOpacity} prop={opacity} />}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Content;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./main.css\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className='header'>\r\n      <div className='header__logo'>\r\n        <NavLink exact to='/'>\r\n          <div className='header__text'>FRONTEND dev</div>\r\n        </NavLink>\r\n      </div>\r\n      <div className='header__home'>\r\n        <NavLink exact to='/'>\r\n          <span className='material-icons-outlined'>home</span>\r\n        </NavLink>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./main.css\";\r\n\r\nfunction InfoBar() {\r\n  return (\r\n    <div className='container info-bar__info'>\r\n      <div className='container__head'>\r\n        <h4>Стэк</h4>\r\n      </div>\r\n      <div className='info-bar'>\r\n        <div className='info-bar__img'>\r\n          <img src={\"/images/main/atom.svg\"} alt='react'></img>\r\n        </div>\r\n        <div className='info-bar__img'>\r\n          <img src={\"/images/main/css.png\"} alt='css3'></img>\r\n        </div>\r\n        <div className='info-bar__img'>\r\n          <img src={\"/images/main/es6.png\"} alt='es6'></img>\r\n        </div>\r\n\r\n        <div className='info-bar__img'>\r\n          <img src={\"/images/main/html.png\"} alt='html5'></img>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InfoBar;\r\n","import React from \"react\";\r\nimport \"./main.css\";\r\n\r\nfunction LinkBar() {\r\n  return (\r\n    <div className='container info-bar__link'>\r\n      <div className='container__head'>\r\n        <h4>Ссылки</h4>\r\n      </div>\r\n      <div className='info-bar'>\r\n        <a\r\n          className='info-bar__img'\r\n          target='_blank'\r\n          rel='noreferrer'\r\n          href='https://github.com/xamesLab/portfolio'>\r\n          <img src={\"/images/main/github.svg\"} alt='github'></img>\r\n        </a>\r\n        <a\r\n          className='info-bar__img'\r\n          target='_blank'\r\n          rel='noreferrer'\r\n          href='https://tlgg.ru/@xamchief'>\r\n          <img src={\"/images/main/telegram.svg\"} alt='trlrgram'></img>\r\n        </a>\r\n        <a\r\n          className='info-bar__img'\r\n          target='_blank'\r\n          rel='noreferrer'\r\n          href='https://linkedin.com/in/evgeniian'>\r\n          <img src={\"/images/main/linkedin.svg\"} alt='linkedin'></img>\r\n        </a>\r\n        <a\r\n          className='info-bar__img'\r\n          target='_blank'\r\n          rel='noreferrer'\r\n          href='https://vk.com/id471610781'>\r\n          <img src={\"/images/main/vk.svg\"} alt='vk'></img>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LinkBar;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./main.css\";\r\n\r\nfunction ProjectBar() {\r\n  return (\r\n    <div className='container project'>\r\n      <div className='container__head'>\r\n        <h4>Проекты</h4>\r\n      </div>\r\n      <div className='project__bar'>\r\n        <ul>\r\n          <li>\r\n            <NavLink className='project__link' to='/card3D'>\r\n              Карточка товара\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink className='project__link' to='/graph'>\r\n              Обход графа\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink className='project__link' to='/memo'>\r\n              Памятка JS\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink className='project__link' to='/snake'>\r\n              Змейка\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink className='project__link' to='/calc'>\r\n              Калькулятор\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink className='project__link' to='/btn'>\r\n              Неоморфизм\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectBar;\r\n","import React from \"react\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport Content from \"./main_component/Content\";\r\nimport Header from \"./main_component/Header\";\r\nimport InfoBar from \"./main_component/InfoBar\";\r\nimport LinkBar from \"./main_component/LinkBar\";\r\nimport ProjectBar from \"./main_component/ProjectBar\";\r\n\r\nfunction MainApp() {\r\n  //routing\r\n  return (\r\n    <HashRouter>\r\n      <div className=\"main\">\r\n        <Header />\r\n        <div className=\"main__content\">\r\n          <InfoBar />\r\n          <LinkBar />\r\n\r\n          <Content />\r\n          <ProjectBar />\r\n        </div>\r\n        <div className=\"main__footer\">&copy; xamesLab 2021</div>\r\n      </div>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default MainApp;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport MainApp from \"./MainApp\";\r\nimport \"./index.css\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <MainApp />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}